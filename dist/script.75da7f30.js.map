{"version":3,"sources":["components/Validation/FieldValidation.js","components/Modal/modal.js","script.js"],"names":["EMAIL_REGEXP","input","document","querySelector","onInput","isEmailValid","value","style","borderColor","addEventListener","test","modal","overlay","openModal","classList","remove","closeModal","console","log","add","_FieldValidation","_interopRequireDefault","require","_modal","obj","__esModule","default","openModalBtn","closeModalBtn","toJSONString","form","elements","querySelectorAll","i","length","element","name","JSON","stringify","getElementById","e","preventDefault","json","newXHR","XMLHttpRequest","open","setRequestHeader","formData","onreadystatechange","readyState","DONE","status","innerHTML","responseText","alert","send"],"mappings":";;AEAA,IAAAoB,gBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAAgE,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEhE,CAAC,YAAW;AFHZ,EEII,EFJExB,EEII2B,UFJQ,EEII,CFJD,EEIIzB,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,otBFJsE;ACAlI,ADEA,EEGI,EDLEQ,ADEAV,EEGI2B,GDLC,ADEA,GCFG1B,ADEAA,OEGS,CDLD,ADEA,CCFCC,ADEAA,CEGGD,QAAQ,CAACC,GDLC,ADEA,CCFC,ADEA,QCFQ,CAAC,ACKE,CAAC,IFHE,CAAC,OEGS,CAAC;ADJ9D,ADGO,EEEH,EDLES,ECKIX,GFFMG,ECHH,ACKE,GDLCF,ACKEA,EFFKE,CAAA,EAAG,GCHF,ACKE,CDLDD,ACKEA,aDLW,ACKE,CDLD,ACKE,UDLQ,CAAC,GCKK,CAAC;ADHjD,EDEL,AEGEF,IFHEI,CEGG,CAACI,CDLMI,SAASA,ADEP,CCFO,ADENZ,ECFS,GDEJ,AEGE,CFHDK,AEGE,KFHG,CAAC,CEGG,CFHD,CEGGF,wBAAO,CAAC;EDJxCO,ACKAgB,EFHA1B,GCFK,CAACa,CDED,CAACP,IEGM,CFHD,AEGEE,CFHDD,CCFG,CAACO,MAAM,CAAC,EDEA,GAAG,CEGG,CAAC,CDLC,CAAC,KCKK,EAAEF,WFHS,KEGA,CAAC;EDJjDD,ADEF,AEGEgB,CFHD,MCFQ,ADEF,CCFGd,KCKK,CAACL,GDLG,CAACM,MAAM,CAAC,KCKK,CAAC,EDLE,CAAC,ICKI,EAAEC,iBAAU,CAAC;ADJrD,ECME,EFJAf,KAAK,CAACM,CEIGsB,IFJE,CAACrB,OEISqB,CAACC,GFJC,CEIG,EFJA,AEIE,KFJG;ACFhC,EDGD,EEII,IAAIN,GAAG,GAAG,CAAC,CAAC;ADLX,ADEP,IEIM,IAAIO,CDNMf,OCME,GDNQA,ACMLc,CDNK,EAAG,CCMJ,CAACE,gBAAgB,CAAC,yBAAyB,CAAC;AFFrE/B,ECHIgB,ECME,CFHD,CAACR,GCHK,ACMA,CDNCS,GAAG,ACMAe,CDNC,ACMA,GAAG,CAAC,EAAEA,CDNC,ACMA,CDNC,ADGF,CAAC,CEGGF,MFHI,EAAE3B,AEGE,CAAC8B,MFHI,AEGE,CFHD,CEGG,EAAED,CAAC,EAAE;AFDhD,ECJItB,ICMI,CDNC,CAACG,CDIDT,CEEG8B,ODNO,ACMA,CDNChB,ECMEY,CDNC,ADIF1B,CCJG,ADIFC,KAAK,CEEG,CFFD,AEEE2B,CDNC,ACMA,CDNC,ACMA;EDL7BrB,ADIA,IEEI,GDNG,ADIAZ,CCJCc,ACMAsB,IAAI,GAAGD,EDNE,CAAChB,CDIC,CAACT,CCJC,CAAC,ACMA,CAAC0B,CFFC,CAAC9B,EEEE,GDNG,ADIA,CCJC,ADIA;ACHnC,ADIA,MEEQ,IAAIA,KAAK,GAAG6B,OAAO,CAAC7B,KAAK;ADNhC,MCQO,IAAI8B,IAAI,EAAE;QACRZ,GAAG,CAACY,IAAI,CAAC,GAAG9B,KAAK;MACnB;IACF;IACA,OAAO+B,IAAI,CAACC,SAAS,CAACd,GAAG,CAAC;EAC5B;EAEAtB,QAAQ,CAACO,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;IACvD,IAAIqB,IAAI,GAAG5B,QAAQ,CAACqC,cAAc,CAAC,cAAc,CAAC;IAClDT,IAAI,CAACrB,gBAAgB,CACnB,QAAQ,EACR,UAAS+B,CAAC,EAAE;MACVA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAIC,IAAI,GAAGb,YAAY,CAAC,IAAI,CAAC;MAC7BZ,OAAO,CAACC,GAAG,CAACwB,IAAI,CAAC;MAEjB,IAAIC,MAAM,GAAG,IAAIC,cAAc,CAAC,CAAC;MAEjCD,MAAM,CAACE,IAAI,CAAC,MAAM,EAAE,uBAAuB,CAAC;;MAE5C;MACA;MACAF,MAAM,CAACG,gBAAgB,CAAC,cAAc,EAAE,kBAAkB,CAAC;;MAE3D;MACA,IAAIC,QAAQ,GAAGL,IAAI;MAEnBC,MAAM,CAACK,kBAAkB,GAAG,YAAW;QACrC,IAAIL,MAAM,CAACM,UAAU,IAAIL,cAAc,CAACM,IAAI,EAAE;UAC5C,IAAIP,MAAM,CAACQ,MAAM,IAAI,GAAG,EAAE;YACxBjD,QAAQ,CAACqC,cAAc,CAAC,aAAa,CAAC,CAACa,SAAS,GAAGT,MAAM,CAACU,YAAY;UACxE,CAAC,MAAM,IAAIV,MAAM,CAACQ,MAAM,IAAI,GAAG,EAAE;YAC/BG,KAAK,CAAC,YAAY,CAAC;UACrB,CAAC,MAAM;YACLA,KAAK,CAAC,qBAAqB,EAAEX,MAAM,CAACQ,MAAM,CAAC;YAC3CjD,QAAQ,CAACqC,cAAc,CAAC,aAAa,CAAC,CAACa,SAAS,GAAG,iDAAiD;UACtG;QACF;MACF,CAAC;MAEDT,MAAM,CAACY,IAAI,CAACR,QAAQ,CAAC;IACvB,CAAC,EACD,KACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,EAAE,CAAC","file":"script.75da7f30.js","sourceRoot":"../src","sourcesContent":["const EMAIL_REGEXP = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\n\nconst input = document.querySelector('.email-field');\n\nexport function onInput() {\n  if (isEmailValid(input.value)) {\n    input.style.borderColor = 'rgba(250,250,250,0.0';\n  } else {\n    input.style.borderColor = 'red';\n  }\n}\n\ninput.addEventListener('input', onInput);\n\nfunction isEmailValid(value) {\n    return EMAIL_REGEXP.test(value)\n}","const modal = document.querySelector(\".modal\");\nconst overlay = document.querySelector(\".overlay\");\n\nexport function openModal() {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n\nexport function closeModal() {\n    console.log('click')\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n};","import onInput from \"./components/Validation/FieldValidation\"\nimport { openModal, closeModal } from \"./components/Modal/modal\"\n\n(function() {\n    const openModalBtn = document.querySelector(\".btn-open\");\n    const closeModalBtn = document.querySelector(\".btn-close\");\n    const input = document.querySelector('.email-field');\n\n    input.addEventListener('input', onInput);\n    openModalBtn.addEventListener(\"click\", openModal);\n    closeModalBtn.addEventListener(\"click\", closeModal);\n\n    function toJSONString(form) {\n      var obj = {};\n      var elements = form.querySelectorAll(\"input, select, textarea\");\n      for (var i = 0; i < elements.length; ++i) {\n        var element = elements[i];\n        var name = element.name;\n        var value = element.value;\n\n        if (name) {\n          obj[name] = value;\n        }\n      }\n      return JSON.stringify(obj);\n    }\n    \n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var form = document.getElementById(\"form-contact\");\n      form.addEventListener(\n        \"submit\",\n        function(e) {\n          e.preventDefault();\n          var json = toJSONString(this);\n          console.log(json)\n\n          var newXHR = new XMLHttpRequest();\n\n          newXHR.open(\"POST\", \"http://localhost:9090\");\n\n          // set the header\n          // this lets the server know where/how to expect your data\n          newXHR.setRequestHeader(\"Content-Type\", \"application/json\");\n\n          // this is how form data looks like when you send it with the attributes `action=\"POST\"` on your form\n          var formData = json;\n\n          newXHR.onreadystatechange = function() {\n            if (newXHR.readyState == XMLHttpRequest.DONE) {\n              if (newXHR.status == 200) {\n                document.getElementById(\"err-message\").innerHTML = newXHR.responseText;\n              } else if (newXHR.status == 400) {\n                alert(\"Ошибка 400\");\n              } else {\n                alert(\"Что-то пошло не так\", newXHR.status);\n                document.getElementById(\"err-message\").innerHTML = \"Ошибка отправки. Обратитесь в службу поддержки.\";\n              }\n            }\n          };\n\n          newXHR.send(formData);\n        },\n        false\n      );\n    });\n  })();\n\n"]}